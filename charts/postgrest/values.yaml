# Default values for postgrest.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

versionOverride: ""

image:
  repository: postgrest/postgrest
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# Enable Helm chart test to check the postgrest service is up
test:
  enabled: true
  image:
    repository: busybox
    pullPolicy: IfNotPresent
    tag: "latest"

# -- Extra kubernetes objects to deploy (value evaluted as a template)
extraObjects: []

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: "25%"
    maxSurge: "25%"

initContainers: {}

command: []
args: []

postgrest:
  # -- The dbUri for connecting to the database. Required
  dbUri: ""
  dbSchema: ""
  dbAnonRole: ""
  dbPool: ""
  dbPoolTimeout: ""
  dbExtraSearchPath: ""
  dbChannel: ""
  dbChannelEnabled: ""
  serverHost: ""
  serverPort: "9000"
  openApiServerProxyUri: ""
  # -- The JWT Secret used for constructing JWTs. Required
  jwtSecret: ""
  secretIsBase64: ""
  jwtAud: ""
  roleClaimKey: ""
  maxRows: ""
  preRequest: ""
  rootSpec: ""
  rawMediaTypes: ""
  # NOTE: adminServerPort is set via pod.adminPort and service.adminPort

secret: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

pod:
  annotations: {}
  containerPort: 9000
  # -- The admin server port for PostgREST. Automatically sets the adminServerPort configuration value.
  adminPort: 9001
  env: []
  # -- The readiness probe for PostgREST. Can also use requests to /live per https://postgrest.org/en/stable/references/admin.html#health-check
  readinessProbe:
    httpGet:
      path: /ready
      port: http-admin
    initialDelaySeconds: 5
    periodSeconds: 5
  livenessProbe: {}
  startupProbe: {}
  volumes: []
  volumeMounts: []
  securityContext: {}

service:
  type: ClusterIP
  port: 80
  adminPort: 9001

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
