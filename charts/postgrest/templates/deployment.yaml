apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgrest.fullname" . }}
  labels:
    {{- include "postgrest.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
  {{- with .Values.strategy }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "postgrest.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.pod.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "postgrest.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "postgrest.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.pod.securityContext | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers:
      {{ toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- $defaultVersion := .Values.versionOverride | default $.Chart.AppVersion }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default $defaultVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command:
            {{- toYaml .Values.command | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args:
            {{- toYaml .Values.args | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.postgrest.dbUri }}
            - name: PGRST_DB_URI
              value: "@/mnt/secret/db-uri.txt"
            {{- end }}
            {{- if .Values.postgrest.dbSchema }}
            - name: PGRST_DB_SCHEMA
              value: {{ .Values.postgrest.dbSchema }}
            {{- end }}
            {{- if .Values.postgrest.dbAnonRole }}
            - name: PGRST_DB_ANON_ROLE
              value: {{ .Values.postgrest.dbAnonRole }}
            {{- end }}
            {{- if .Values.postgrest.dbPool }}
            - name: PGRST_DB_POOL
              value: {{ .Values.postgrest.dbPool }}
            {{- end }}
            {{- if .Values.postgrest.dbPoolTimeout }}
            - name: PGRST_DB_POOL_TIMEOUT
              value: {{ .Values.postgrest.dbPoolTimeout | quote }}
            {{- end }}
            {{- if .Values.postgrest.dbExtraSearchPath }}
            - name: PGRST_DB_EXTRA_SEARCH_PATH
              value: {{ .Values.postgrest.dbExtraSearchPath }}
            {{- end }}
            {{- if .Values.postgrest.dbChannel }}
            - name: PGRST_DB_CHANNEL
              value: {{ .Values.postgrest.dbChannel }}
            {{- end }}
            {{- if .Values.postgrest.dbChannelEnabled }}
            - name: PGRST_DB_CHANNEL_ENABLED
              value: {{ .Values.postgrest.dbChannelEnabled }}
            {{- end }}
            {{- if .Values.postgrest.serverHost }}
            - name: PGRST_SERVER_HOST
              value: {{ .Values.postgrest.serverHost }}
            {{- end }}
            {{- if .Values.postgrest.serverPort }}
            - name: PGRST_SERVER_PORT
              value: {{ .Values.postgrest.serverPort | quote }}
            {{- end }}
            {{- if .Values.postgrest.openApiServerProxyUri }}
            - name: PGRST_OPENAPI_SERVER_PROXY_URI
              value: {{ .Values.postgrest.openApiServerProxyUri }}
            {{- end }}
            {{- if .Values.postgrest.jwtSecret }}
            - name: PGRST_JWT_SECRET
              value: "@/mnt/secret/jwt-secret.txt"
            {{- end }}
            {{- if .Values.postgrest.secretIsBase64 }}
            - name: PGRST_SECRET_IS_BASE64
              value: {{ .Values.postgrest.secretIsBase64 }}
            {{- end }}
            {{- if .Values.postgrest.jwtAud }}
            - name: PGRST_JWT_AUD
              value: {{ .Values.postgrest.jwtAud }}
            {{- end }}
            {{- if .Values.postgrest.roleClaimKey }}
            - name: PGRST_ROLE_CLAIM_KEY
              value: {{ .Values.postgrest.roleClaimKey }}
            {{- end }}
            {{- if .Values.postgrest.maxRows }}
            - name: PGRST_DB_MAX_ROWS
              value: {{ .Values.postgrest.maxRows }}
            {{- end }}
            {{- if .Values.postgrest.preRequest }}
            - name: PGRST_PRE_REQUEST
              value: {{ .Values.postgrest.preRequest }}
            {{- end }}
            {{- if .Values.postgrest.rootSpec }}
            - name: PGRST_ROOT_SPEC
              value: {{ .Values.postgrest.rootSpec }}
            {{- end }}
            {{- if .Values.postgrest.rawMediaTypes }}
            - name: PGRST_RAW_MEDIA_TYPES
              value: {{ .Values.postgrest.rawMediaTypes }}
            {{- end }}
            {{- if .Values.pod.adminPort }}
            - name: PGRST_ADMIN_SERVER_PORT
              value: {{ .Values.pod.adminPort | quote }}
            {{- end }}
            {{- if .Values.pod.env }}
              {{- toYaml .Values.pod.env | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.pod.containerPort }}
              protocol: TCP
            {{- if .Values.pod.adminPort }}
            - name: http-admin
              containerPort: {{ .Values.pod.adminPort }}
              protocol: TCP
            {{- end }}
          {{- with .Values.pod.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.pod.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.pod.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: "/mnt/secret"
              name: secret-mount
          {{- if .Values.pod.volumeMounts }}
            {{ toYaml .Values.pod.volumeMounts | indent 12 }}
          {{- end }}
      volumes:
        - name: secret-mount
          secret:
            secretName: {{ include "postgrest.fullname" . }}-secret
        {{- if .Values.pod.volumes }}
          {{- toYaml .Values.pod.volumes | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
